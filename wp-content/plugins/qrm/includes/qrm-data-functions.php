<?php
function uploadFile(){

	if ( ! function_exists( 'wp_handle_upload' ) ) {
		require_once( ABSPATH . 'wp-admin/includes/file.php' );
	}

	$uploadedfile = $_FILES['file'];
	$upload_overrides = array( 'test_form' => false );

	$movefile = wp_handle_upload( $uploadedfile, $upload_overrides );

	if ( $movefile && !isset( $movefile['error'] ) ) {

		// $filename should be the path to a file in the upload directory.
		$filename = $movefile['file'];

		// The ID of the post this attachment is for.
		$parent_post_id = $_POST["riskID"];

		// Check the type of file. We'll use this as the 'post_mime_type'.
		$filetype = wp_check_filetype( basename( $filename ), null );

		// Get the path to the upload directory.
		$wp_upload_dir = wp_upload_dir();

		// Prepare an array of post data for the attachment.
		$attachment = array(
				'guid'           => $wp_upload_dir['url'] . '/' . basename( $filename ),
				'post_mime_type' => $filetype['type'],
				'post_title'     => preg_replace( '/\.[^.]+$/', '', basename( $filename ) ),
				'post_content'   => '',
				'post_status'    => 'inherit'
		);

		// Insert the attachment.
		$attach_id = wp_insert_attachment( $attachment, $filename, $parent_post_id );

		// Make sure that this file is included, as wp_generate_attachment_metadata() depends on it.
		require_once( ABSPATH . 'wp-admin/includes/image.php' );

		// Generate the metadata for the attachment, and update the database record.
		$attach_data = wp_generate_attachment_metadata( $attach_id, $filename );
		wp_update_attachment_metadata( $attach_id, $attach_data );

		// Add Description and other info

		global $user_identity, $user_email,$user_ID, $current_user;
		get_currentuserinfo();
		$args = array(
				'ID'           => $attach_id,
				'post_excerpt' => $current_user->display_name,
				'post_content' => $_POST["description"]
		);

		wp_update_post( $args );
	} else {
		/**
		 * Error generated by _wp_handle_upload()
		 * @see _wp_handle_upload() in wp-admin/includes/file.php
		 */
		echo $movefile['error'];
	}

	exit;

}
function updateRisksRelMatrix(){
	$risks = json_decode(file_get_contents("php://input"));

	foreach($risks as $risk){
		$r = json_decode(get_post_meta($risk->riskID, "riskdata", true));
		$r->inherentProb = $risk->newInherentProb;
		$r->inherentImpact = $risk->newInherentImpact;
		$r->treatedProb = $risk->newTreatedProb;
		$r->treatedImpact = $risk->newTreatedImpact;

		update_post_meta( $risk->riskID, "riskdata", json_encode($r) );
	}

	exit;
}
function addComments(){

	$comment = json_decode(file_get_contents("php://input"));
	$time = current_time('mysql');

	global $user_identity, $user_email,$user_ID, $current_user;
	get_currentuserinfo();

	$data = array(
			'comment_post_ID' => $comment->riskID,
			'comment_author' => $current_user->display_name,
			'comment_author_email' => $current_user->user_email,
			'comment_content' => $comment->comment,
			'comment_type' => '',
			'comment_parent' => 0,
			'user_id' => $user_ID,
			'comment_date' => $time,
			'comment_approved' => 1,
	);

	wp_insert_comment($data);

	$emptyRisk = new Risk();
	$emptyRisk->comments = get_comments(array('post_id' => $comment->riskID));
	echo json_encode($emptyRisk, JSON_PRETTY_PRINT);	exit;
}
function getRiskAttachments (){
	$riskID = json_decode(file_get_contents("php://input"));
	$attachments = get_children(array("post_parent"=>$riskID, "post_type"=>"attachment"));
	echo json_encode($attachments, JSON_PRETTY_PRINT);
	exit;
}
function getRisk (){
	$riskID = json_decode(file_get_contents("php://input"));
	$risk = json_decode(get_post_meta($riskID, "riskdata", true));
	$risk->comments = get_comments(array('post_id' => $riskID));
	$risk->attachments = get_children(array("post_parent"=>$riskID, "post_type"=>"attachment"));
	echo json_encode($risk, JSON_PRETTY_PRINT);
	exit;
}
function getAllRisks(){

	global $post;
	$args = array(
			'post_type' => 'risk',
			'posts_per_page' => -1
	);

	$the_query = new WP_Query($args);
	$risks = array();

	while( $the_query->have_posts()) : $the_query->the_post();

	$risk = json_decode(get_post_meta($post->ID, "riskdata", true));

	//echo var_dump($post);

	$r = new SmallRisk();
	$r->description = $risk->description;
	$r->title = $risk->title;
	$r->id = $risk->id;
	$r->owner = $risk->owner->name;
	$r->manager = $risk->manager->name;
	$r->currentTolerance = $risk->currentTolerance;
	$r->inherentProb = $risk->inherentProb;
	$r->inherentImpact = $risk->inherentImpact;
	$r->treatedProb = $risk->treatedProb;
	$r->treatedImpact = $risk->treatedImpact;
	$r->treated = $risk->treated;

	array_push($risks, $risk);
	endwhile;

	$data = new Data();
	$data->data = $risks;
	echo json_encode($data, JSON_PRETTY_PRINT);
	exit;
}
function saveRisk (){
	$postdata = file_get_contents("php://input");
	$risk = json_decode($postdata);



	$postID = null;

	if (!empty($risk->id)){
		// Update the existing post
		$post['ID'] = $risk->id;
		wp_update_post(array(
		'ID' => $risk->id,
		'post_content' => $risk->description,
		'post_title' => $risk->title,
		'post_status'   =>'publish',
		'post_type' =>'risk',
		'post_author'   => 1
		));
		$postID = $risk->id;
	} else {
		//Create a new one and record the ID
		$postID = wp_insert_post(array(
				'post_content' => $risk->description,
				'post_title' => $risk->title,
	 		'post_type' => 'risk',
				'post_status'   =>'publish',
				'post_author'   => 1
		));
		$risk->id = $postID;
	}
	// The Bulk of the data is held in the post's meta data
	update_post_meta( $postID, "riskdata", json_encode($risk) );

	// Add any comments to the returned object
	$risk->comments = get_comments(array('post_id' => $postID));
	$risk->attachments = get_children(array("post_parent"=>$postID, "post_type"=>"attachment"));

	echo json_encode($risk);
	exit;
}
